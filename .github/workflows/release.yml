name: ghanizadev/bluedis/release
on:
  push:
    branches:
      - feat/ci-release

jobs:
  build-app:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
    runs-on: ${{ matrix.platform }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3.5.0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install prerequesites (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |-
          sudo apt update && \
          sudo apt install -y libwebkit2gtk-4.0-dev \
          build-essential \
          curl \
          wget \
          libssl-dev \
          libgtk-3-dev \
          squashfs-tools \
          libgtksourceview-3.0-dev \
          libappindicator3-dev \
          lld \
          llvm \
          nsis \
          xfce4 \
          fakeroot \
          libclang-dev && \
          sudo apt-get clean
      - name: Install node_modules
        run: npm ci
      - name: Install Tauri CLI
        run: cargo install tauri-cli
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
      - name: Build the app
        run: cargo tauri build
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-${{ matrix.platform }}
          path: |
            dist
            !dist/**/*.md
            
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Get Package Version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
      - name: Create Release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${process.env.PACKAGE_VERSION}`,
              name: `Bluedis v${process.env.PACKAGE_VERSION}`,
              body: 'Take a look at the assets to download and install this app.',
              draft: true,
              prerelease: false
            })
            return data.id
            
#  publish-release:
#      permissions:
#        contents: write
#      runs-on: ubuntu-20.04
#      needs: [ create-release, build-tauri ]
#
#      steps:
#        - name: Publish Release
#          id: publish-release
#          uses: actions/github-script@v6
#          env:
#            release_id: ${{ needs.create-release.outputs.release_id }}
#          with:
#            script: |
#              github.rest.repos.updateRelease({
#                owner: context.repo.owner,
#                repo: context.repo.repo,
#                release_id: process.env.release_id,
#                draft: false,
#                prerelease: false
#              })