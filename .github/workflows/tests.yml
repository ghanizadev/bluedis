name: ghanizadev/bluedis/tests

on:
  push:
    branches:
      - "*"
      - "*/*"
      - "!master"
      - "!develop"

jobs:
  test-ui:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ghanizadev/tauri-build-image:main
      options: --security-opt seccomp=unconfined
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - run: npm ci
      - name: Run tests
        run: npm run test

  test-app:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install prerequesites
        run: |-
          sudo apt update && \
          sudo apt install -y libwebkit2gtk-4.0-dev \
          build-essential \
          curl \
          wget \
          libssl-dev \
          libgtk-3-dev \
          squashfs-tools \
          libgtksourceview-3.0-dev \
          libappindicator3-dev \
          lld \
          llvm \
          nsis \
          xfce4 \
          fakeroot \
          libclang-dev && \
          sudo apt-get clean
      - name: Check "./dist" folder
        run: mkdir -p dist
      - name: Run tests
        run: cargo test --manifest-path ./src-tauri/Cargo.toml --verbose
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379

  build-app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install prerequisites
        run: |-
          sudo apt update && \
          sudo apt install -y libwebkit2gtk-4.0-dev \
          build-essential \
          curl \
          wget \
          libssl-dev \
          libgtk-3-dev \
          squashfs-tools \
          libgtksourceview-3.0-dev \
          libappindicator3-dev \
          lld \
          llvm \
          nsis \
          xfce4 \
          fakeroot \
          libclang-dev && \
          sudo apt-get clean
      - name: Check "./dist" folder
        run: mkdir -p dist
      - name: Build app
        run: cargo build --manifest-path ./src-tauri/Cargo.toml --verbose

  build-ui:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - run: npm ci
      - name: Build UI
        run: npm run build
