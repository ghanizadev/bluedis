version: 2.1

orbs:
  node: circleci/node@5.1.0

jobs:
  setup:
    docker:
      - image: ghcr.io/ghanizadev/tauri-build-image:main
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - persist_to_workspace:
          root: .
          paths:
            - .

  build-app:
    docker:
      - image: ghcr.io/ghanizadev/tauri-build-image:main
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install prerequisites
          command: |
            sudo apt update
            sudo apt install xfce4 fakeroot -y
      - run:
          name: Build app
          command: npm run build:app

  build-all:
    docker:
      - image: ghcr.io/ghanizadev/tauri-build-image:main
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install prerequisites
          command: |
            sudo apt update
            sudo apt install xfce4 fakeroot -y
      - run:
          name: Build all
          command: npm run build:all

  build-ui:
    docker:
      - image: ghcr.io/ghanizadev/tauri-build-image:main
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Build UI
          command: npm run build:ui

  test:
    docker:
      - image: ghcr.io/ghanizadev/tauri-build-image:main
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run tests
          command: npm run test
          
  coverage-ui:
    docker:
      - image: ghcr.io/ghanizadev/tauri-build-image:main
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Generate coverage
          command: npm run coverage
      - persist_to_workspace:
          root: .
          paths:
            - .
          
  coverage-app:
    machine: true
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Coverage with docker
          command: docker run --security-opt seccomp=unconfined -v "${PWD}/project/src-tauri:/" xd009642/tarpaulin 
      - persist_to_workspace:
          root: .
          paths:
            - .
          
  coverage-report:
    machine: true
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Download cc-test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
      - run:
          name: Make coverage report
          command: |
            ./tmp/cc-test-reporter format-coverage -t lcov -o tmp/codeclimate.app.json coverage/app/lcov.info
            ./tmp/cc-test-reporter format-coverage -t lcov -o tmp/codeclimate.ui.json coverage/ui/lcov.info
      - run:
          name: Join coverage reports
          command: |
            ./tmp/cc-test-reporter sum-coverage tmp/codeclimate.*.json -p 2 -o tmp/codeclimate.final.json
      - run:
          name: Upload coverage results to Code Climate
          command: |
            ./tmp/cc-test-reporter upload-coverage -i tmp/codeclimate.final.json

workflows:
  tests:
    when:
      matches:
        pattern: "^(?!master|develop|release).*$"
        value: << pipeline.git.branch >>
    jobs:
      - setup
#      - test:
#          requires:
#            - setup
      - coverage-app:
          requires:
            - setup
      - coverage-ui:
          requires:
            - setup
      - coverage-report:
          requires:
            - coverage-ui
            - coverage-app
#      - build-app:
#          requires:
#            - setup
#      - build-ui:
#          requires:
#            - setup

  develop:
    when:
      equal: [develop, << pipeline.git.branch >>]
    jobs:
      - setup
#      - coverage:
#          requires:
#            - setup
      - build-app:
          requires:
            - coverage
      - build-ui:
          requires:
            - coverage

  deploy:
    when:
      equal: [master, << pipeline.git.branch >>]
    jobs:
      - setup
#      - coverage:
#          requires:
#            - setup
      - build-all:
          requires:
            - coverage
