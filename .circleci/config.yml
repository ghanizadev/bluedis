version: 2.1

orbs:
  node: circleci/node@4.7.0
  
defaults: &defaults
  working_directory: .
  docker:
    - image: snapcore/snapcraft:edge

jobs:
  setup:
    docker:
      - image: cimg/node:17.2.0
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - persist_to_workspace:
          root: .
          paths:
            - .
          
  build-app:
    docker:
      - image: cimg/node:17.2.0
    steps:
      - attach_workspace: 
          at: .
      - run:
          name: Install prerequisites
          command: |
            apt update
            apt install xfce4 fakeroot -y
      - run:
          name: Build app
          command: npm run pack
      - persist_to_workspace:
          root: .
          paths:
            - .
    
  build-snap:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Update index
          command: apt update
      - run:
          name: Build snap
          command: snapcraft
      - persist_to_workspace:
          root: .
          paths: [ '*.snap' ]
          
  release:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install prerequisites
          command: |
            sudo apt update
            apt install -y openssl
      - run:
          name: Decrypt credentials
          command: |
            openssl aes-256-cbc -d \
              -in .circleci/credentials.enc \
              -out credentials \
              -k $SNAPCRAFT_CREDENTIALS_KEY
      - run:
          name: Authenticate snapcraft
          command: snapcraft login --with credentials
      - run:
          name: Push/release snap
          command: snapcraft push *.snap --release edge

  test:
    docker:
      - image: cimg/node:17.2.0
    steps:
      - attach_workspace: 
          at: .
      - run:
          name: Run test with coverage
          command: npm run test -- --coverage
      - persist_to_workspace:
          root: .
          paths:
            - .
  
  code-coverage:
    machine:
      image: ubuntu-2004:current
    steps:
      - attach_workspace: 
          at: .
      - run:
          name: Download cc-test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
      - persist_to_workspace:
          root: tmp
          paths:
            - cc-test-reporter
      - run:
          name: Make coverage report
          command: ./tmp/cc-test-reporter format-coverage -t lcov -o tmp/codeclimate.json coverage/lcov.info
      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.json
      - run:
          name: Upload coverage results to Code Climate
          command: |
            ./tmp/cc-test-reporter upload-coverage -i tmp/codeclimate.json

workflows:
  test:
    when:
      matches:
        pattern: "^(?!master|develop|release).*$"
        value: << pipeline.git.branch >>
    jobs:
      - setup
      - test:
          requires:
            - setup

  deploy:
    when:
      equal: [ master, << pipeline.git.branch >> ]
    jobs:
      - setup
      - test:
          requires:
            - setup
      - code-coverage:
          requires:
            - test
      - build-app:
          requires:
            - test
      - build-snap:
          requires:
            - build-app
      - release:
          requires:
            - build-snap